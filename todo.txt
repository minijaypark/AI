//선공은 첫 수에 가운데에 못 둔다.
//패턴 매칭
typedef struct {

	char **board;           /* The board configuration of the game state.  */
							/* board[x][y] specifies the position of the   */
							/* xth column and the yth row of the board,    */
							/* where column and row numbering starts at 0. */
							/* (The 0th row is the bottom row.)            */
							/* A value of 0 specifies that the position is */
							/* occupied by a piece owned by player 0, a    */
							/* value of 1 specifies that the position is   */
							/* occupied by a piece owned by player 1, and  */
							/* a value of C4_NONE specifies that the       */
							/* position is unoccupied.                     */

	int *(score_array[2]);  /* An array specifying statistics on both      */
							/* players.  score_array[0] specifies the      */
							/* statistics for player 0, while              */
							/* score_array[1] specifies the statistics for */
							/* player 1.                                   */

	int score[2];           /* The actual scores of each player, deducible */
							/* from score_array, but kept separately for   */
							/* efficiency.  The score of player x is the   */
							/* sum of score_array[x].  A score is          */
							/* basically a function of how many winning    */
							/* positions are still available to the        */
							/* and how close he/she is to achieving each   */
							/* of these positions.                         */

	short int winner;       /* The winner of the game - either 0, 1 or     */
							/* C4_NONE.  Deducible from score_array, but   */
							/* kept separately for efficiency.             */

	int num_of_pieces;      /* The number of pieces currently occupying    */
							/* board spaces.  Deducible from board, but    */
							/* kept separately for efficiency.             */

} Game_state;
